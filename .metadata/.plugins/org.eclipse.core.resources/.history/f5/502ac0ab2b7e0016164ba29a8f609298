package ManageCD.JDBC;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;

import AllExercise8.Category;
import AllExercise8.CategoryController;
import AllExercise8.Product;
import AllExercise8.ProductController;
import AllExercise8.User;
import AllExercise8.UserController;

public class MainCD {
	static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
	public static void main(String[] args) {
		CDController cdController = new CDController();
		CD cd = null;
		try {
			int ans = 1;
			while (ans != 5) {
				while (true) {
					System.out.println("1. Add CD");
					System.out.println("2. Search CD");
					System.out.println("3. Update CD");
					System.out.println("4. Delete CD");
					System.out.println("5. Exit");
					ans = Integer.parseInt(input.readLine());
					if (ans >= 1 && ans <= 5)
						break;
				}
				
				switch (ans) {
				case 1:
					// Add CD
					System.out.println("Enter name(*): ");
					String name = input.readLine();
					System.out.println("Enter singer(*): ");
					String singer = input.readLine();				
					System.out.println("Enter numbersongs(*): ");
					int numbersongs = Integer.parseInt(input.readLine());
					System.out.println("Enter price(*): ");
					double price = Double.parseDouble(input.readLine());						
					if (!name.equals("") && !singer.equals("")){
						cd = new CD(name, singer, numbersongs, price);
						cdController.addCD(cd);
						System.out.println("success");
					}else{
						System.out.println("Error: Name and singer is not empty");
					}
					break;
				case 2:
					// Search CD
					System.out.println("Enter name need search: ");
					String searchName = input.readLine();
					List<CD> listCD = cdController.searchCD(searchName);
					if(listCD.size() > 0){
						System.out.println("=======Result search========");
						for (CD cd2 : listCD) {
							System.out.println(cd2.toString());
						}			
					}else{
						System.out.println("Cannot find CD");
					}
					break;
				case 3:
					// Update CD
					System.out.println("=======CD=========");
					int idCD = showInfoCD(cdController, cd);
					
					System.out.println("Enter number songs need update: ");
					int numbersongsUpdate = Integer.parseInt(input.readLine());
					System.out.println("Enter price need update: ");
					double priceUpdate = Double.parseDouble(input.readLine());
					
					cd = new CD(idCD, numbersongsUpdate, priceUpdate);
					cdController.updateCD(cd);
					System.out.println("update success");
					break;
				case 4:
					//  Delete CD
					System.out.println("=======Product=========");
					int idCDDelete = showInfoCD(cdController, cd);
					String anss;
					while(true){
						System.out.println("Are you sure want to delete?(Y/N): ");
						anss = input.readLine();
						if (anss.equalsIgnoreCase("Y") || anss.equalsIgnoreCase("N")){
							if (anss.equalsIgnoreCase("Y")){
								cdController.deleteCD(idCDDelete);
								System.out.println("delete success");
							}
							break;
						}
					}					
					break;
				}				
			}			
		} catch (ClassNotFoundException | HeadlessException | IOException | NumberFormatException e) {
			System.err.println(e.getMessage());
		}
	}
	
	// show information of all CD
	private static int showInfoCD(CDController cdController,
			CD cd) throws NumberFormatException, IOException {
		List<CD> list = cdController.getAllCD();
		for (CD cd2 : list) {
			System.out.println(cd2.toString());
		}
		/*
		 *  users have selected the a CD, 
		 *  then start checking view users has selected the correct CD by id, 
		 *  if true, the end of the loop, 
		 *  if the wrong is for the user to choose again.
		 */
		int chooseCD;
		while(true){
			System.out.println("Choose: ");
			chooseCD = Integer.parseInt(input.readLine());
			int result = 0;
			for (CD cd2 : list) {
				if (cd2.getId() == chooseCD){
					result = 1;
					break;
				}
			}
			if (result == 1)
				break;
		}	
		return chooseCD;
	}

}
